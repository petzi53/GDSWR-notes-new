{
  "hash": "51611713397020625c7e82d97faafefd",
  "result": {
    "engine": "knitr",
    "markdown": "---\nknitr: \n    opts_chunk: \n      code-fold: show\n      results: hold\n---\n\n# Creating Maps {#sec-annex-b}\n\n\n\n## Introduction\n\nI am following here the article [@felixanalytix-2023] and video\n[@felixanalytix-2023a].\n\nArticle and video explain how to\n\n1.  create a choropleth world map using World Bank data,\n2.  zoom on any specific region of the world using Openstreetmap, and\n3.  improve the scale and color palette of your maps.\n\nAs an example Europe will be visualized. But you can reuse the R code\nshared in this article on any region of your choice.\n\n::::: my-resource\n::: my-resource-header\nPackages used in this article\n:::\n\n::: my-resource-container\nBesides packages from the {**tidyverse**} the article uses\n\n-   the {**rnaturalearth**} R package  to download raw data from the\n    Natural Earth Project,\n-   the {**sf**} package to work with simple features in R,\n-   and the {**wbstats**} package for the World Bank <a class='glossary' title='An API, or application programming interface, is a set of defined rules that enable different applications to communicate with each other. It acts as an intermediary layer that processes data transfers between systems, letting companies open their application data and functionality to external third-party developers, business partners, and internal departments within their companies. (IBM)'>API</a>.\n:::\n:::::\n\n## Download world data\n\nFor downloading world data for the map, we will call the\n`rnaturalearth::ne_countries()` function with scale as “medium” (we don’t\nneed detailed geographic data) and the returnclass will be “sf” (we want\nan sf object to work with the {**sf**} package).\n\nWe will immediately Antartica remove from the dataset.\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-download-world-data}\n: Download world data and remove Antartica\n:::\n::::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nworld <- rnaturalearth::ne_countries(\n        scale = \"medium\",\n        returnclass = \"sf\"\n    ) |> \n    dplyr::filter(admin != \"Antarctica\")\n```\n:::\n\n\n<center>(*For this R code chunk is no output available*)</center>\n:::\n::::::\n\n## Changing world map projection\n\nChanging the world map projection can easily be done using the\n`sf::st_transform()` function. Here we decide to use the [mollweide\nprojection](https://en.wikipedia.org/wiki/Mollweide_projection).\n\n![Mollweide projection of the world: Wikipedia\n(https://upload.wikimedia.org/wikipedia/commons/9/9e/Mollweide_projection_SW.jpg)](https://upload.wikimedia.org/wikipedia/commons/9/9e/Mollweide_projection_SW.jpg){#fig-annex-b-mollweide-projection\n.lightbox\nfig-alt=\"Mollweide projection: Mollweide is a pseudocylindrical projection in which the equator is represented as a straight horizontal line perpendicular to a central meridian that is one-half the equator's length. The other parallels compress near the poles, while the other meridians are equally spaced at the equator. The meridians at 90 degrees east and west form a perfect circle, and the whole earth is depicted in a proportional 2:1 ellipse.\"\nfig-align=\"center\" width=\"100%\"}\n\n> The Mollweide is a pseudocylindrical projection in which the equator\n> is represented as a straight horizontal line perpendicular to a\n> central meridian that is one-half the equator's length. The other\n> parallels compress near the poles, while the other meridians are\n> equally spaced at the equator. The meridians at 90 degrees east and\n> west form a perfect circle, and the whole earth is depicted in a\n> proportional 2:1 ellipse. The proportion of the area of the ellipse\n> between any given parallel and the equator is the same as the\n> proportion of the area on the globe between that parallel and the\n> equator, but at the expense of shape distortion, which is significant\n> at the perimeter of the ellipse…\n> ([Wikipedia](https://en.wikipedia.org/wiki/Mollweide_projection))\n\nThere are numerous different projection explained in PROJ\n[@evenden-2024] a generic coordinate transformation software that\ntransforms geospatial coordinates from one coordinate reference system\n(CRS) to another. This includes cartographic projections as well as\ngeodetic transformations.\n\nConsulting the [PROJ](https://proj.org) manual [@proj-contributors-2024]\nis vital to get the code that `sf::st_transform()` needs as parameter\nfor the transformation. This code for the [Mollweide\nprojection](https://proj.org/en/stable/operations/projections/moll.html#mollweide)\nis `+proj=moll`.\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-mollweide-projection}\n: Change world map projection to Mollweide projection\n:::\n::::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ntarget_crs = \"+proj=moll\"\nworld_moll <- world |> \n    sf::st_transform(crs = target_crs)\n```\n:::\n\n:::\n::::::\n\n## Getting World Bank data\n\nHow to use the {**wbstats**} package is explained well in the package\n[vignette](https://gshs-ornl.github.io/wbstats/articles/wbstats.html).\nTo get data for our map example we will download the indicator\n“employment (% of the labor force)”. It is an arbitrary indicator chosen\nfrom a list of all the indicators available in the World Bank API\ngenerated with the `wbstats::wb_cachelist()` function. We will filter\nthis indicator using again the `dplyr::filter()` function.\n\nFor the most recent information on available data from the World Bank\nAPI `wbstats::wb_cache()` downloads an updated version of the information\nstored in `wbstats::wb_cachelist()`. `wbstats::wb_cachelist()` is simply a saved return of\n`wbstats::wb_cache(lang = \"en\")`. To use this updated information in `wbstats::wb_search()` or\n`wbstats::wb_data()`, set the cache parameter to the saved list returned from\n`wbstats::wb_cache()`. It is always a good idea to use this updated information to\ninsure that you have access to the latest available information, such as\nnewly added indicators or data sources.\n\n::::: my-procedure\n::: my-procedure-header\nDownload \"Unemployment\" indicator\n:::\n\n::: my-procedure-container\nTo download data you need to follow several steps:\n\n1.  Instead of using the information stored in `wbstats::wb_cachelist()`\n    it is better to update data with `wbstats::wb_cache()`\n2.  Use `wbstats::wb_search()` to find the parameter(s) for the\n    indicator(s) your are looking for.\n3.  Filter the search results to keep only the indicator(s) you are\n    interested in.\n4.  Download World Bank the appropriate indicator data with\n    `wbstats::wb_data()`.\n:::\n:::::\n\n:::::::::::::::::::::::::::::::::: my-code-collection\n::::: my-code-collection-header\n::: my-code-collection-icon\n:::\n\n::: {#exm-annex-b-download-world-bank-data}\n: Download world bank data\n:::\n:::::\n\n:::::::::::::::::::::::::::::: my-code-collection-container\n::::::::::::::::::::::::::::: panel-tabset\n###### 1. Update data\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-update-world-bank-data}\n: Update world bank data\n:::\n::::\n\n::: my-r-code-container\n<center>**The following chunk takes several seconds. Run this code chunk\nmanually if you need an updated version.**</center>\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nmy_create_folder(\"data/annex-b\")\n\nnew_cache <- wbstats::wb_cache(lang = \"en\")\nmy_save_data_file(\"annex-b\", new_cache, \"new_cache.RDS\")\n```\n:::\n\n\n<center>(*For this R code chunk is no output available*)</center>\n:::\n::::::\n\nThe expression in the parentheses `lang = \"en\"` wouldn't be necessary\nbecause the default language is English.\n\n###### Compare datasets\n\n::::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-compare-world-bank-datasets}\n: Compare cachelist and new_cache World Bank datasets\n:::\n::::\n\n:::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nfile_to_check <- \"data/annex-b/new_cache.RDS\"\n\nif (file.exists(file_to_check)) {\n    new_cache <- base::readRDS(file_to_check)\n    base::cat(\"********** Updated World Bank Data Set *********\\n\")\n    utils::str(new_cache, max.level = 1)\n} else {\n    base::cat(\"********** No new dataset available *********\\n\")\n    base::cat(\"********** Run the previous 'Update data' tab manually *********\\n\")\n}\n\nbase::cat(\"\\n********** World Bank Data Set in wb_cachelist *********\\n\")\nutils::str(wbstats::wb_cachelist, max.level = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ********** Updated World Bank Data Set *********\n#> List of 8\n#>  $ countries    : tibble [296 × 18] (S3: tbl_df/tbl/data.frame)\n#>  $ indicators   : tibble [25,257 × 8] (S3: tbl_df/tbl/data.frame)\n#>  $ sources      : tibble [70 × 9] (S3: tbl_df/tbl/data.frame)\n#>  $ topics       : tibble [21 × 3] (S3: tbl_df/tbl/data.frame)\n#>  $ regions      : tibble [44 × 4] (S3: tbl_df/tbl/data.frame)\n#>  $ income_levels: tibble [7 × 3] (S3: tbl_df/tbl/data.frame)\n#>  $ lending_types: tibble [4 × 3] (S3: tbl_df/tbl/data.frame)\n#>  $ languages    : tibble [23 × 3] (S3: tbl_df/tbl/data.frame)\n#> \n#> ********** World Bank Data Set in wb_cachelist *********\n#> List of 8\n#>  $ countries    : tibble [304 × 18] (S3: tbl_df/tbl/data.frame)\n#>  $ indicators   : tibble [16,649 × 8] (S3: tbl_df/tbl/data.frame)\n#>  $ sources      : tibble [63 × 9] (S3: tbl_df/tbl/data.frame)\n#>  $ topics       : tibble [21 × 3] (S3: tbl_df/tbl/data.frame)\n#>  $ regions      : tibble [48 × 4] (S3: tbl_df/tbl/data.frame)\n#>  $ income_levels: tibble [7 × 3] (S3: tbl_df/tbl/data.frame)\n#>  $ lending_types: tibble [4 × 3] (S3: tbl_df/tbl/data.frame)\n#>  $ languages    : tibble [23 × 3] (S3: tbl_df/tbl/data.frame)\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nThere are some notable differences in my datasets between the release of\nthe {**wbstats**} package (2020-12-04) and my update four and half year later\n(2025-05-09):\n\n-   The number of countries and regions is in the updated version\n    smaller than in the `wbstats::wb_cachelist` version.\n-   The numbers of indicators has in the updated list risen from 16,649\n    to 25,257.\n-   The number of sources has increased slightly from 63 to 70.\n-   The other four data frames didn't change.\n\n::: callout-note\nThe numbers are the result of the differences. For instance the\ndifference of four regions is the result of two more regions in the\nupdated version (\"Africa Eastern and Southern\" and \"Africa Western and\nCentral\") versus six less regions (\"Andean Region\", \"Latin America and\nthe Caribbean\", \"Central America\", \"Non-resource rich Sub-Saharan Africa\ncountries, of which landlocked\", \"Resource rich Sub-Saharan Africa\ncountries, of which oil exporters\", \"Southern Cone\")\n\nThe situation is even more complicated in the country case: There are in\nsum 64 differences in various columns, some of them just different names\n(Czech Republik versus Czechia). These 64 distinctions consist of more\nand less countries in the two datasets compared and boil down to the\nnumber of eight rows. But behind these eight rows lurk 64 mismatches.\n\nThe four data frames with the same number of rows (\"topics\",\n\"income_levels\", \"lending_types\", \"languages) are not the result of\ndifferent mismatches. These four tibbles are actually identical.\n:::\n::::\n:::::::\n\n###### Show data\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-show-world-bank-data}\n: Show World Bank datasets\n:::\n::::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nfile_to_check <- \"data/annex-b/new_cache.RDS\"\n\n\nif (file.exists(file_to_check)) {\n    my_cache <- base::readRDS(file_to_check)\n} else {\n    my_cache <- wbstats::wb_cachelist\n}\n\nbase::cat(\"********** List details of all eight tibbles *********\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ********** List details of all eight tibbles *********\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"show\"}\nmy_cache\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> $countries\n#> # A tibble: 296 × 18\n#>    iso3c iso2c country capital_city longitude latitude region_iso3c region_iso2c\n#>    <chr> <chr> <chr>   <chr>            <dbl>    <dbl> <chr>        <chr>       \n#>  1 ABW   AW    Aruba   Oranjestad      -70.0     12.5  LCN          ZJ          \n#>  2 AFE   ZH    Africa… <NA>             NA       NA    <NA>         <NA>        \n#>  3 AFG   AF    Afghan… Kabul            69.2     34.5  SAS          8S          \n#>  4 AFR   A9    Africa  <NA>             NA       NA    <NA>         <NA>        \n#>  5 AFW   ZI    Africa… <NA>             NA       NA    <NA>         <NA>        \n#>  6 AGO   AO    Angola  Luanda           13.2     -8.81 SSF          ZG          \n#>  7 ALB   AL    Albania Tirane           19.8     41.3  ECS          Z7          \n#>  8 AND   AD    Andorra Andorra la …      1.52    42.5  ECS          Z7          \n#>  9 ARB   1A    Arab W… <NA>             NA       NA    <NA>         <NA>        \n#> 10 ARE   AE    United… Abu Dhabi        54.4     24.5  MEA          ZQ          \n#> # ℹ 286 more rows\n#> # ℹ 10 more variables: region <chr>, admin_region_iso3c <chr>,\n#> #   admin_region_iso2c <chr>, admin_region <chr>, income_level_iso3c <chr>,\n#> #   income_level_iso2c <chr>, income_level <chr>, lending_type_iso3c <chr>,\n#> #   lending_type_iso2c <chr>, lending_type <chr>\n#> \n#> $indicators\n#> # A tibble: 25,257 × 8\n#>    indicator_id       indicator unit  indicator_desc source_org topics source_id\n#>    <chr>              <chr>     <lgl> <chr>          <chr>      <list>     <dbl>\n#>  1 1.0.HCount.1.90usd Poverty … NA    The poverty h… LAC Equit… <df>          37\n#>  2 1.0.HCount.2.5usd  Poverty … NA    The poverty h… LAC Equit… <df>          37\n#>  3 1.0.HCount.Mid10t… Middle C… NA    The poverty h… LAC Equit… <df>          37\n#>  4 1.0.HCount.Ofcl    Official… NA    The poverty h… LAC Equit… <df>          37\n#>  5 1.0.HCount.Poor4u… Poverty … NA    The poverty h… LAC Equit… <df>          37\n#>  6 1.0.HCount.Vul4to… Vulnerab… NA    The poverty h… LAC Equit… <df>          37\n#>  7 1.0.PGap.1.90usd   Poverty … NA    The poverty g… LAC Equit… <df>          37\n#>  8 1.0.PGap.2.5usd    Poverty … NA    The poverty g… LAC Equit… <df>          37\n#>  9 1.0.PGap.Poor4uds  Poverty … NA    The poverty g… LAC Equit… <df>          37\n#> 10 1.0.PSev.1.90usd   Poverty … NA    The poverty s… LAC Equit… <df>          37\n#> # ℹ 25,247 more rows\n#> # ℹ 1 more variable: source <chr>\n#> \n#> $sources\n#> # A tibble: 70 × 9\n#>    source_id last_updated source              source_code source_desc source_url\n#>        <dbl> <date>       <chr>               <chr>       <lgl>       <lgl>     \n#>  1         1 2021-08-18   Doing Business      DBS         NA          NA        \n#>  2         2 2025-04-15   World Development … WDI         NA          NA        \n#>  3         3 2024-11-05   Worldwide Governan… WGI         NA          NA        \n#>  4         5 2016-03-21   Subnational Malnut… SNM         NA          NA        \n#>  5         6 2025-02-26   International Debt… IDS         NA          NA        \n#>  6        11 2013-02-22   Africa Development… ADI         NA          NA        \n#>  7        12 2024-06-25   Education Statisti… EDS         NA          NA        \n#>  8        13 2022-03-25   Enterprise Surveys  ESY         NA          NA        \n#>  9        14 2025-04-17   Gender Statistics   GDS         NA          NA        \n#> 10        15 2025-05-03   Global Economic Mo… GEM         NA          NA        \n#> # ℹ 60 more rows\n#> # ℹ 3 more variables: data_available <lgl>, metadata_available <lgl>,\n#> #   concepts <dbl>\n#> \n#> $topics\n#> # A tibble: 21 × 3\n#>    topic_id topic                           topic_desc                          \n#>       <dbl> <chr>                           <chr>                               \n#>  1        1 Agriculture & Rural Development \"For the 70 percent of the world's …\n#>  2        2 Aid Effectiveness               \"Aid effectiveness is the impact th…\n#>  3        3 Economy & Growth                \"Economic growth is central to econ…\n#>  4        4 Education                       \"Education is one of the most power…\n#>  5        5 Energy & Mining                 \"The world economy needs ever-incre…\n#>  6        6 Environment                     \"Natural and man-made environmental…\n#>  7        7 Financial Sector                \"An economy's financial markets are…\n#>  8        8 Health                          \"Improving health is central to the…\n#>  9        9 Infrastructure                  \"Infrastructure helps determine the…\n#> 10       10 Social Protection & Labor       \"The supply of labor available in a…\n#> # ℹ 11 more rows\n#> \n#> $regions\n#> # A tibble: 44 × 4\n#>    region_id iso3c iso2c region                                              \n#>        <dbl> <chr> <chr> <chr>                                               \n#>  1        NA AFE   ZH    Africa Eastern and Southern                         \n#>  2        NA AFR   A9    Africa                                              \n#>  3        NA AFW   ZI    Africa Western and Central                          \n#>  4        NA ARB   1A    Arab World                                          \n#>  5        NA CAA   C9    Sub-Saharan Africa (IFC classification)             \n#>  6        NA CEA   C4    East Asia and the Pacific (IFC classification)      \n#>  7        NA CEB   B8    Central Europe and the Baltics                      \n#>  8        NA CEU   C5    Europe and Central Asia (IFC classification)        \n#>  9        NA CLA   C6    Latin America and the Caribbean (IFC classification)\n#> 10        NA CME   C7    Middle East and North Africa (IFC classification)   \n#> # ℹ 34 more rows\n#> \n#> $income_levels\n#> # A tibble: 7 × 3\n#>   iso3c iso2c income_level       \n#>   <chr> <chr> <chr>              \n#> 1 HIC   XD    High income        \n#> 2 INX   XY    Not classified     \n#> 3 LIC   XM    Low income         \n#> 4 LMC   XN    Lower middle income\n#> 5 LMY   XO    Low & middle income\n#> 6 MIC   XP    Middle income      \n#> 7 UMC   XT    Upper middle income\n#> \n#> $lending_types\n#> # A tibble: 4 × 3\n#>   iso3c iso2c lending_type  \n#>   <chr> <chr> <chr>         \n#> 1 IBD   XF    IBRD          \n#> 2 IDB   XH    Blend         \n#> 3 IDX   XI    IDA           \n#> 4 LNX   XX    Not classified\n#> \n#> $languages\n#> # A tibble: 23 × 3\n#>    iso2  lang       lang_native     \n#>    <chr> <chr>      <chr>           \n#>  1 en    English    English         \n#>  2 es    Spanish    Español         \n#>  3 fr    French     Français        \n#>  4 ar    Arabic     عربي            \n#>  5 zh    Chinese    中文            \n#>  6 bg    Bulgarian  Български       \n#>  7 de    German     Deutsch         \n#>  8 hi    Hindi      हिंदी            \n#>  9 id    Indonesian Bahasa indonesia\n#> 10 ja    Japanese   日本語          \n#> # ℹ 13 more rows\n```\n\n\n:::\n:::\n\n:::\n::::::\n\n###### 2. Search data\n\n::::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-search-world-bank-data}\n: Search World Bank data\n:::\n::::\n\n:::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nfile_to_check <- \"data/annex-b/new_cache.RDS\"\n\nif (file.exists(file_to_check)) {\n    my_cache <- base::readRDS(file_to_check)\n} else {\n    my_cache <- wbstats::wb_cachelist\n}\n\nemployment_inds<- wbstats::wb_search(\n    pattern = \"Unemployment, total\",\n    extra = TRUE,\n    cache = my_cache)\n\ndplyr::glimpse(employment_inds)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Rows: 2\n#> Columns: 8\n#> $ indicator_id   <chr> \"SL.UEM.TOTL.NE.ZS\", \"SL.UEM.TOTL.ZS\"\n#> $ indicator      <chr> \"Unemployment, total (% of total labor force) (national…\n#> $ unit           <lgl> NA, NA\n#> $ indicator_desc <chr> \"Unemployment refers to the share of the labor force th…\n#> $ source_org     <chr> \"International Labour Organization. “Labour Force Stati…\n#> $ topics         <list> [<data.frame[1 x 2]>], [<data.frame[2 x 2]>]\n#> $ source_id      <dbl> 2, 2\n#> $ source         <chr> \"World Development Indicators\", \"World Development Indi…\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nSearching for “Unemployment (% of the labor force)” returned an empty\ndata frame. The new (updated) search string is \"Unemployment, total\".\nThis search returns two results. The first row uses for the percentage\nof unemployment national statistics and can therefore vary between\ndifferent countries. The second row uses the modeled estimate of the\n<a class='glossary' title='The International Labour Organization (ILO) is a United Nations agency established in 1919 under the League of Nations. It is dedicated to advancing social and economic justice by setting international labor standards. https://www.ilo.org/'>ILO</a>.\n\nI am going to use the ILO unemployment indicator `SL.UEM.TOTL.ZS` as\nused in the blog example by Felix Analytix.\n\nTo provide the source for creating graphics I need the content of the\n\"source_org`column. By the default the parameter`extra =\nFALSE`provides only indicator ID, the short name and the description of the indicator. To get all columns of the cache parameters's indicator we need to set`extra\n= TRUE\\`.\n\n::: {.callout-important style=\"color: red;\"}\nThe larger string \"Unemployment, total (% of total labor force)\" did not\nwork for me and returned an empty data frame.\n\nOne has to have already specific knowledge to get not too many rows\nreturned. If you are using just \"Unemployment\" then you have to skim\nthrough 93 observations to find your indicator.\n:::\n::::\n:::::::\n\n###### 3. Filter data\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-filter-data}\n: Filter World Bank data\n:::\n::::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nind <- \"SL.UEM.TOTL.ZS\"\n\nindicator_info <- employment_inds |> \n    dplyr::filter(indicator_id == ind)\n\nindicator_info$indicator\nindicator_info$indicator_desc\nindicator_info$source_org\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] \"Unemployment, total (% of total labor force) (modeled ILO estimate)\"\n#> [1] \"Unemployment refers to the share of the labor force that is without work but available for and seeking employment.\"\n#> [1] \"International Labour Organization. “ILO Modelled Estimates and Projections database (ILOEST)” ILOSTAT. Accessed January 07, 2025. https://ilostat.ilo.org/data/.\"\n```\n\n\n:::\n:::\n\n:::\n::::::\n\n###### 4. Download data\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-download-data}\n: Numbered R Code Title\n:::\n::::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nfile_to_check <- \"data/annex-b/new_cache.RDS\"\n\nif (file.exists(file_to_check)) {\n    my_cache <- base::readRDS(file_to_check)\n} else {\n    my_cache <- wbstats::wb_cachelist\n}\n\ndf <- wbstats::wb_data(\n    indicator = ind,\n    start_date = 2024,\n    end_date = 2024,\n    cache = my_cache\n    )\n\ndplyr::glimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Rows: 217\n#> Columns: 9\n#> $ iso2c          <chr> \"AW\", \"AF\", \"AO\", \"AL\", \"AD\", \"AE\", \"AR\", \"AM\", \"AS\", \"…\n#> $ iso3c          <chr> \"ABW\", \"AFG\", \"AGO\", \"ALB\", \"AND\", \"ARE\", \"ARG\", \"ARM\",…\n#> $ country        <chr> \"Aruba\", \"Afghanistan\", \"Angola\", \"Albania\", \"Andorra\",…\n#> $ date           <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2…\n#> $ SL.UEM.TOTL.ZS <dbl> NA, 13.295, 14.464, 10.250, NA, 2.133, 7.876, 13.329, N…\n#> $ unit           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n#> $ obs_status     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n#> $ footnote       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n#> $ last_updated   <date> 2025-04-15, 2025-04-15, 2025-04-15, 2025-04-15, 2025-0…\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nLooking at <https://data.worldbank.org/indicator/SL.UEM.TOTL.ZS>, I\nlearned the latest data today (2025-05-09) are from 2024.\n:::\n::::::\n:::::::::::::::::::::::::::::\n::::::::::::::::::::::::::::::\n::::::::::::::::::::::::::::::::::\n\n## Visualizing data distribution\n\nWith a very quick data exploratory analysis we will see the distribution\nof our indicator.\n\n:::::::::::::::: my-code-collection\n::::: my-code-collection-header\n::: my-code-collection-icon\n:::\n\n::: {#exm-annex-b-vis-data-dist}\n: Visualize data distribution\n:::\n:::::\n\n:::::::::::: my-code-collection-container\n::::::::::: panel-tabset\n###### Data as-is\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-show-dist-as-is}\n: Show the data distribution without transformation\n:::\n::::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ndf |> \n    dplyr::filter(!is.na(SL.UEM.TOTL.ZS)) |> \n    ggplot2::ggplot(ggplot2::aes(SL.UEM.TOTL.ZS)) +\n    ggplot2::geom_histogram(bins = 100)\n```\n\n::: {.cell-output-display}\n![Data distribution of unemployment rate](91-creating-maps_files/figure-html/fig-show-dist-as-is-1.png){#fig-show-dist-as-is width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nMost of the data show 3-6% unemployment rate. This can be a bit annoying\nbecause we will hardly see the difference in the color palette for these\nspecific percentages.\n\nI will therefore use a square root transformation on the percentage\nvalues so that the color palette will be better distributed (showed in\nthe next tab).\n:::\n::::::\n\n###### Data transformed\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-show-data-transformed}\n: Show the data distribution with a square root transformation\n:::\n::::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\ndf |> \n    dplyr::filter(!is.na(SL.UEM.TOTL.ZS)) |> \n    ggplot2::ggplot(ggplot2::aes(SL.UEM.TOTL.ZS)) +\n    ggplot2::geom_histogram(bins = 100) +\n    ggplot2::scale_x_sqrt()\n```\n\n::: {.cell-output-display}\n![Data distribution of unemployment rate with square root transformation](91-creating-maps_files/figure-html/fig-show-data-transformed-1.png){#fig-show-data-transformed width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\nWith the square root transformation the data are somewhat better\ndistributed.\n:::\n::::::\n:::::::::::\n::::::::::::\n::::::::::::::::\n\n## Plotting a world map\n\nWe are now prepared to join our World Bank data to the previously\ngenerated geographic `world_moll` sf object (see:\n@cnj-annex-b-mollweide-projection). \n\n::: {.callout-warning #wrn-annex-b-iso3c-code}\n###### \"iso_a3\" does not contain all ISO 3166 Country Codes\n\nThe blog entry recommends to join the World Bank data object `df` by \"iso3c\" code which represents the alpha-3 <a class='glossary' title='https://www.iso.org/iso-3166-country-codes.html and https://www.iso.org/obp/ui/#search'>ISO 3166 Country Codes</a>). But it does it with \"iso_a3\" code from the naturalearthdata object \"wordl_moll\". But it turned out that in my case \"iso_a3\" does not contain correct data for all countries. For instance is has -99 for France and Norway instead of the valide codes of \"FRA\" and \"NOR\". The result is that these tw3o countries are greyed out in the colored map reprsentation of the unemployment rate.\n\nInstead I am going to use \"adm0_a3\". I could also use \"iso_a3_eh\" as a Brave-KI research result says:\n\n> The `iso_a3_eh` field in Natural Earth data is used to provide a more flexible interpretation of ISO 3-character country codes. The “eh” suffix stands for “okay, but not great” in American English slang, indicating that while the code is not strictly accurate according to ISO standards, it is close enough for most practical purposes. This field was added to help users who are looking for a simpler, albeit less precise, match for their data visualization or analysis needs. For instance, France’s `iso_a2` field is set to `-99` to indicate a strict ISO match is not available, while `iso_a2_eh` is set to `FR`. Similarly, Norway’s `iso_a3` might be `-99`, but `iso_a3_eh` would be `NOR`.\n\nSee also the discussion in the [GitHub thread](https://github.com/nvkelso/natural-earth-vector/issues/268) especially the following [comment/answer of the developer](https://github.com/nvkelso/natural-earth-vector/issues/268#issuecomment-778832542).\n\n:::\n\nUsing the {**ggplot2**} R package, we will create a world map with the\nfunction `ggplot2::geom_sf()`. We will also make the square root\ntransformation to see more clearly the percentage differences.\n\n\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-annex-b-world-map-2024}\n: Unemployment rate in 2024\n:::\n::::\n\n::: my-r-code-container\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nworld_moll |>  \n    dplyr::left_join(df, by = c(\"adm0_a3\" = \"iso3c\")) |> \n    ggplot2::ggplot() + \n    ggplot2::geom_sf(ggplot2::aes(fill = SL.UEM.TOTL.ZS)) + \n    ggplot2::scale_fill_viridis_c(\n        trans = \"sqrt\", \n        labels = scales::percent_format(scale = 1), \n        breaks = c(1:5)^2\n        ) + \n    \n    ## fix labels if needed: https://stackoverflow.com/a/60733863 \n    ## not necessary, only for Linux/Fedora systems\n    # ggplot2::scale_x_continuous(labels = function(x) paste(x, '\\udoBo' , \"W\")) +\n    # ggplot2::scale_y_continuous(labels = function(x) paste(x, '\\uboBo', \"N\" )) +\n    \n    ggplot2::theme_bw() + \n    ggplot2::theme(\n        panel.background = ggplot2::element_rect(fill = \"aliceblue\")\n        ) + \n    ggplot2::labs (\n        title = paste(unique(df$date), indicator_info$indicator), \n        fill = NULL, \n        caption = paste0(\"Source: \", \n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 1),\n            \".\\n\",\n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 2),\n             \".\\n\",\n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 3),\n            \". \",\n             stringr::str_split_i(indicator_info$source_org, \"\\\\. \", -1)\n        )\n    )\n```\n\n::: {.cell-output-display}\n![World map of 2024 unemployment, data source: World Bank](91-creating-maps_files/figure-html/fig-world-map-2023-1.png){#fig-world-map-2023 width=672}\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\nThe two data frames are joined by the ISO-alpha3 codes that have\ndifferent names in the two datasets.\n\nThe `scale_fill_viridis()` function is designed to be perceived by\nviewers with common forms of colour blindness. We have used the\n`ggplot2::scale_fill_viridis_c()` function, and applied the “trans”\nargument to specify the \"sqrt\" transformation. We have also adjusted the\n“breaks” argument accordingly.\n\nWithout splitting the caption text it would be too long to fit into one\nline.\n:::\n::::::\n\n\n\n## Zooming into a specific area\n\nTo zoom on a specific area, you need to know its coordinates, i.e., its\nbounding box. You can't determine the exact coordinates from the world\nmap because the graph is too coarse.\n[OpenStreetMap](https://www.openstreetmap.org/) has a [nice\ntool](https://www.openstreetmap.org/export) to get the coordinates of a\nspecific bounding box.\n\n![Screenshot: Creating bounding box with\nOpenStreetMap.](img/my-openstreetmap-bounding-box-min.png){#fig-annex-b-bounding-box\nfig-alt=\"OpenStreetMap export view: On the left panel with 25% of the page width you see the coordinates of the bounding box from the right side, overlaying a world map (75% of the page width). The coordinates are written in a gray box on the left panes with four figures in little white fields situated top, left, bottom and right. The figures are (starting from the top clockwise): 71.5, 41.5, 34.31, -25.5\"\nfig-align=\"center\" width=\"100%\"}\n\nThe coordinates for my bounding box which I have drawn manually with the\ncursor on the world map are written in the gray box on the left pane:\nStarting from the top clockwise: 71.5, 41.5, 34.31, -25.5 they represent\nlatitude and longitude and can be used in the R code. (Before I could\ndraw the bounding box I had to click the link under the gray bounding\nbox in the left pane saying \"Choose another area\nmanually\"[^91-creating-maps-1].)\n\n[^91-creating-maps-1]: or similar: The text in my page was in German:\n    \"Einen anderen Bereich manuell auswählen\".\n\n::: callout-note\nI didn't know how to get maps from continents, such as Europe, for a\nlong time. It was relatively easy for Africa to sort by country names.\nHowever, this strategy did not work for Europe, where, for instance,\nFrance and Great Britain still have several overseas territories (see:\n[What is a\ncountry?](https://docs.ropensci.org/rnaturalearth/articles/what-is-a-country.html)).\n\nNow, I have learned that the trick is to zoom in and clip the relevant\npart of the world map downloaded via Natural Earth (see also [Making\nMaps in\nR](https://biostats-r.github.io/biostats/workingInR/140_maps.html),\nchapter 23 of the open source book \"Working in R\" [@soule-2024].\n:::\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-b-zoom-window}\n: Zooming into a area manually specified\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nwindow_coord <- sf::st_sfc( \n    sf::st_point(c(-24.5, 34.31)),  # left, bottom \n    sf::st_point(c(41.5, 71.5)),    # right, top \n    crs = 4326 # the EPSG identifier of WGS84 (used in GPS) \n    ) \n    \nwindow_coord_sf <- window_coord |>  \n    sf::st_transform(crs = target_crs) |>  \n    sf::st_coordinates() # retrieve coordinates\n```\n:::\n\n\n\n\n::::\n:::::\n\n\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-b-zoom-europe-map}\n: Show map of Europe (first version)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nworld_moll |>  \n    dplyr::left_join(df, by = c(\"adm0_a3\" = \"iso3c\")) |> \n    ggplot2::ggplot() + \n    ggplot2::geom_sf(ggplot2::aes(fill = SL.UEM.TOTL.ZS)) + \n\n    ## window of the map \n    ggplot2::coord_sf(\n        xlim = window_coord_sf[, \"X\"], \n        ylim = window_coord_sf[, \"Y\"], \n        expand = FALSE \n        ) +\n    \n    ggplot2::scale_fill_viridis_c(\n    trans = \"sqrt\", \n    labels = scales::percent_format(scale = 1), \n    breaks = c(1:5)^2\n    ) + \n\n    ## fix labels not needed: https://stackoverflow.com/a/60733863 \n\n    ggplot2::theme_bw() + \n    ggplot2::theme(\n        panel.background = ggplot2::element_rect(fill = \"aliceblue\"),\n        aspect.ratio = 3/4\n        ) + \n    ggplot2::labs (\n        title = paste(unique(df$date), indicator_info$indicator), \n        fill = NULL, \n        caption = paste0(\"Source: \", \n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 1),\n            \".\\n\",\n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 2),\n             \".\\n\",\n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 3),\n            \". \",\n             stringr::str_split_i(indicator_info$source_org, \"\\\\. \", -1)\n        )\n    )\n```\n\n::: {.cell-output-display}\n![Rate of unemployment in Europe 2023, data source: World Bank](91-creating-maps_files/figure-html/fig-zoom-europe-map-1.png){#fig-zoom-europe-map width=672}\n:::\n:::\n\n***\n\nTo get a graphic with more width I have changed the aspect ration slightly form 1 to `aspect.ratio = 3/4`.\n\nThere are no data (`NA`) for the unemployment ratio available for Ukraine and Kosovo. These two countries are therefore colored grey.\n\n::::\n:::::\n\n## Changing scale and color distribution\n\nIn the 2020 dataset used by the blog article I am referring here, there was the unemployment rate quite different. Especially the very low in Greenland and the very high in the African countries distorted the visual outcome. The extreme yellow and dark blue color with the highest and lowest percentage was not within the European countries.\n\nWe will therefore remove the African countries and Greenland. We will also reduce our data to European countries only. So now the extreme yellow and dark blue color will be the highest and lowest percentage within the European countries. We will also remove the square root transformation (the square root transformation can be misleading for some audience).\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-annex-b-zoom-europe-map2}\n: Show map of Europe (second version)\n::::::\n:::\n::::{.my-r-code-container}\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\nworld_moll_map <- world_moll |>  \n    dplyr::left_join(df, by = c(\"adm0_a3\" = \"iso3c\")) |> \n    dplyr::filter(continent == \"Europe\") |> \n    ggplot2::ggplot() + \n    ggplot2::geom_sf(ggplot2::aes(fill = SL.UEM.TOTL.ZS)) + \n\n    ## window of the map \n    ggplot2::coord_sf(\n        xlim = window_coord_sf[, \"X\"], \n        ylim = window_coord_sf[, \"Y\"], \n        expand = FALSE \n        ) +\n    \n    ggplot2::scale_fill_viridis_c(\n    # trans = \"sqrt\", \n    labels = scales::percent_format(scale = 1) #, \n    # breaks = c(1:5)^2\n    ) + \n\n    ## fix labels not needed: https://stackoverflow.com/a/60733863 \n\n    ggplot2::theme_bw() + \n    ggplot2::theme(\n        panel.background = ggplot2::element_rect(fill = \"aliceblue\"),\n        aspect.ratio = 3/4\n        ) + \n    ggplot2::labs (\n        title = paste(unique(df$date), indicator_info$indicator), \n        fill = NULL, \n        caption = paste0(\"Source: \", \n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 1),\n            \".\\n\",\n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 2),\n             \".\\n\",\n            stringr::str_split_i(indicator_info$source_org, \"\\\\. \", 3),\n            \". \",\n             stringr::str_split_i(indicator_info$source_org, \"\\\\. \", -1)\n        )\n    )\n\nworld_moll_map\n```\n\n::: {.cell-output-display}\n![Rate of unemployment with 2023 European data only, data source: World Bank](91-creating-maps_files/figure-html/fig-zoom-europe-map2-1.png){#fig-zoom-europe-map2 width=672}\n:::\n:::\n\n\n\n\n::::\n:::::\n\nThe result surprised me. The graphic of the unemployment rate for Europe is now quite different. As the article by [@felixanalytix-2023] correctly wrote:\n\n> … we see here a comparison of unemployment between European countries only, while in the previous plot (@fig-zoom-europe-map in my article) we were using global data on unemployment. Spain and Baltic countries are popping up much more, while it was less the case when using a scale based on global world unemployment.\n",
    "supporting": [
      "91-creating-maps_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}